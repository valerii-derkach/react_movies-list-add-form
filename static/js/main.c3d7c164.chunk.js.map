{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","setTitle","hasTitleError","setHasTitleError","setDescription","setImgUrl","hasImgUrlError","setHasImgUrlError","setImdbUrl","hasImdbUrlError","setHasImdbUrlError","setImdbId","hasImbdIdError","setHasImbdIdError","onSubmit","event","preventDefault","htmlFor","classNames","type","id","placeholder","value","onChange","target","App","moviesFromServer","setMovies","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3d7c164.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  addMovie: (movie: Movie) => void,\n}\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [hasImgUrlError, setHasImgUrlError] = useState(false);\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [hasImdbUrlError, setHasImdbUrlError] = useState(false);\n  const [imdbId, setImdbId] = useState('');\n  const [hasImbdIdError, setHasImbdIdError] = useState(false);\n\n  const titleInputFn = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const descriptionInputFn = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDescription(event.target.value);\n  };\n\n  const imgUrlInputFn = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImgUrl(event.target.value);\n    setHasImgUrlError(false);\n  };\n\n  const imdbUrlInputFn = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImdbUrl(event.target.value);\n    setHasImdbUrlError(false);\n  };\n\n  const imdbIdInputFn = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImdbId(event.target.value);\n    setHasImbdIdError(false);\n  };\n\n  const submitter = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasImgUrlError(!imgUrl);\n    setHasImdbUrlError(!imdbUrl);\n    setHasImbdIdError(!imdbId);\n\n    if (title && imgUrl && imdbUrl && imdbId) {\n      const newMovie: Movie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      addMovie(newMovie);\n\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setImdbId('');\n    }\n  };\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={submitter}\n    >\n      <h1 className=\"title is-3\">Add new film:</h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"title\">Title:</label>\n        <div className=\"control\">\n          <input\n            className={classNames('input', { 'is-danger': hasTitleError })}\n            type=\"text\"\n            id=\"title\"\n            placeholder=\"e.g. &apos;Terminator-2&apos;\"\n            value={title}\n            onChange={titleInputFn}\n          />\n        </div>\n        {hasTitleError && (\n          <p className=\"help is-danger\">Please enter the title!</p>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"description\">Description:</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            id=\"description\"\n            type=\"text\"\n            placeholder=\"e.g. &apos;Everybody will die in the end&apos;\"\n            value={description}\n            onChange={descriptionInputFn}\n          />\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"imgUrl\">ImgUrl:</label>\n        <div className=\"control\">\n          <input\n            className={classNames('input', { 'is-danger': hasImgUrlError })}\n            id=\"imgUrl\"\n            type=\"url\"\n            placeholder=\"Put the imgUrl here\"\n            value={imgUrl}\n            onChange={imgUrlInputFn}\n          />\n        </div>\n        {hasImgUrlError && (\n          <p className=\"help is-danger\">Please insert the imgUrl!</p>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"imdbUrl\">imdbUrl:</label>\n        <div className=\"control\">\n          <input\n            className={classNames('input', { 'is-danger': hasImdbUrlError })}\n            id=\"imdbUrl\"\n            type=\"url\"\n            placeholder=\"Insert the imdbUrl link\"\n            value={imdbUrl}\n            onChange={imdbUrlInputFn}\n          />\n        </div>\n        {hasImdbUrlError && (\n          <p className=\"help is-danger\">Please insert the imdbUrl!</p>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"imdbId\">imdbId:</label>\n        <div className=\"control\">\n          <input\n            className={classNames('input', { 'is-danger': hasImbdIdError })}\n            id=\"imdbId\"\n            type=\"text\"\n            placeholder=\"Enter the imdbId\"\n            value={imdbId}\n            onChange={imdbIdInputFn}\n          />\n        </div>\n        {hasImbdIdError && (\n          <p className=\"help is-danger\">Please write the imdbId!</p>\n        )}\n      </div>\n\n      <button\n        className=\"button is-info\"\n        type=\"submit\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(state => [movie, ...state]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}